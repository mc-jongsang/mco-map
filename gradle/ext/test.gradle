apply plugin: 'jacoco'

dependencies {
    // test
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-params:5.8.2'

    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-engine
//    testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.8.2'

    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter
    // core 는 내장 되어 있다.
    testImplementation 'org.mockito:mockito-junit-jupiter:4.5.1'

    // https://mvnrepository.com/artifact/org.mockito/mockito-inline
    testImplementation 'org.mockito:mockito-inline:4.5.1'

    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testImplementation 'org.assertj:assertj-core:3.22.0'
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform {
        //includeTags 'fast', 'smoke & feature-a'
        // excludeTags 'slow', 'ci'
        includeEngines 'junit-jupiter'
        // excludeEngines 'junit-vintage'
    }

//    finalizedBy 'jacocoTestReport' // 추가

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        //showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        html.enabled true
        html.destination file('build/reports/jacocoReport/html')

        csv.enabled true

        xml.enabled true
        xml.destination file('build/reports/jacocoReport/jacocoReport.xml')
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [])
        }))
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

// rule 적용
jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'BUNDLE'
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
            excludes = []
        }
    }
}
